- hosts: ipharm-test
  vars:
    ansible_python_interpreter: "/usr/bin/python3"
  tasks:
    - name: Project directory
      file:
        path: "{{ project_dir }}"
        state: directory

    - name: Copy docker-compose
      copy:
        src: docker-compose.test.yml
        dest: "{{ project_dir + '/docker-compose.yml' }}"

    - name: Create envs directory
      file:
        path: "{{ project_dir + '/.envs/.production'}}"
        state: directory

    - name: Copy envs
      copy:
        src: "{{ item }}"
        dest: "{{ project_dir + '/.envs/.production/' }}"
      with_items:
        - ./.envs/.production/.ipharm_app
        - ./.envs/.production/.ipharm_postgres
        - ./.envs/.production/.ipharm_redis
        - ./.envs/.production/.iciselniky_app
        - ./.envs/.production/.iciselniky_postgres
        - ./.envs/.production/.iciselniky_redis
        - ./.envs/.production/.izadanky_app
        - ./.envs/.production/.izadanky_postgres
        - ./.envs/.production/.izadanky_redis
        - ./.envs/.production/.nginx
        - ./.envs/.production/.grafana

    - name: Create config directory
      file:
        path: "{{ project_dir + '/config'}}"
        state: directory

    - name: Copy config files
      copy:
        src: "{{ item }}"
        dest: "{{ project_dir + '/config/' }}"
      with_items:
        - ./config/nginx-config.conf
        - ./config/promtail-config.yml

    - name: Clean frontend
      become: yes
      file:
        path: "{{ project_dir + '/frontend_ipharm/build'}}"
        state: absent

    - name: Up
      become: yes
      docker_compose:
        project_src: "{{ project_dir }}"
        state: present
        pull: yes

